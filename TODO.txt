- Make an uniform spawn pattern instead of choosing random origins and avoiding buildings, which results in an ugly layout and is slower. To do this, we first determine the range / area in which buildings shall spawn. Then we start from the upper-left corner and go down to fill the first row. Once we filled it, we go to the top and start all over again, trying to place buildings to the right till we also fill that row. The process is repeated till we filled all of the "colums" too. Whenever a building's position is determined, the check for the next building should continue from the its location and not the top-left where it started initially. If possible this should be done without a loop that checks where buildings are touching, but by laying down the matrices in one since we know the size and distance of each building.

- After the above is done, create a road system, which places roads between structures. To do this we'll need a system in the structure manager (via formspec) to register some structures as road segments, road intersections, and road ends. In the mpgen code, we need to choose multiple points in the group (where we determine building positions) and loop road segments to connect them. Since the start of a road will be higher / lower than its end, each segment should go up / down by 1 node in the needed pattern to reach that destination. If there's no way to incline the road enough to reach both points, abort making a road there. When no roads are registered for a mapgen group, make none. This should be added in another lua file.

- A wall system which surrounds the area / range of the group. The structure manager (formspec) must allow registering wall segments, wall corners / connections, and gates. Like the roads idea, walls would only be spawned if any are registered for that mapgen group. Should be done in its own lua file once again.